function createGnuplotFiles(GeomStruct,outDir,binInterval,minFraction,varargin)
% CREATEGNUPLOTFILES Create gnuplot PLT, TXT files.
% 
% createGnuplotFiles(GeomStruct,outputDirectory,binInterval,minFraction) 
% formats the data contained in the data structure GeomStruct for gnuPlot.
% 
% By default, AR-HF and C-S gnuplot files are produced. However, you may
% produce only AR-HF or only C-S files. To do this, supply a flag (a string
% in single quotes) as a final, fifth argument. To produce AR-HF gnuplot
% files, use the 'AR-HF' flag. For C-S, use 'C-S'. Both flags are 
% case-insensitive.
% 
% Outputs to outputDirectory, a string containing the path to the desired
% output directory.
% 
% By default, off2pds.m uses binInterval = 0.01 and minFraction = 0.05.
% 
% Author: B. Hannan
% Written with MATLAB 2012a.
% 5 September 2014.

%%% --------- Check input arguments & parse optional inputs. ---------- %%%
% Handle the optional input argument dataTypeFlag.
numVarArgs = length(varargin);
if numVarArgs > 1
    error(  'myfuns:createGnuplotFiles:TooManyInputs'    ,   ...
            'This function takes at most 1 optional input.');
end
optArgs = {'both'};
optArgs(1:numVarArgs) = varargin;
dataTypeFlag = optArgs{:};
validDataTypeValues = {'both','ar-hf','c-s'};
if ~any(strcmpi(dataTypeFlag,validDataTypeValues))
    error(  'myfuns:createGnuplotFiles:propertyNameValPair'  ,   ...
            ['The input arg dataType must be equal to ''AR-HF'', ''C-S'','...
            ' or ''Both''.']);
end

isArhfOutput = true;
isCsOutput = true;
if strcmpi(dataTypeFlag,'ar-hf')
    isCsOutput = false;
end
if strcmpi(dataTypeFlag,'c-s')
    isArhfOutput = false;
end
%%% ---------------------- End input args check. ---------------------- %%%

outDir = fullfile(outDir,filesep); % Append file separator to path.
numXbins = length(0:binInterval:1);
numYbins = length(0:binInterval:1);

% Create AR-HF files.
if isArhfOutput
    arhf = [cell2mat(GeomStruct.ar)', cell2mat(GeomStruct.hf)'];
    [binnedNormCounts,freqData,cumFreq_CI,sumBinnedRawCounts] = ...
                                            bin_data(arhf, binInterval);
    isArhf = true;
    [txtFileName,pltFileName] = writeGnuData(           ...
        GeomStruct          ,   isArhf              ,   ...
        freqData            ,   cumFreq_CI          ,   ...
        minFraction         ,   sumBinnedRawCounts  ,   ...
        numXbins            ,   numYbins            ,   ...
        binInterval         ,   binnedNormCounts    ,   ...
        outDir                                          ...
        );

    writeGnuFile(                                       ...
        GeomStruct          ,   isArhf              ,   ...
        pltFileName         ,   txtFileName         ,   ...
        sumBinnedRawCounts  ,   freqData            ,   ...
        binInterval         ,   minFraction         ,   ...
        outDir                                          ...
        );
end

% Create C-S files.
if isCsOutput
    convsol = [cell2mat(GeomStruct.convy)', cell2mat(GeomStruct.soly)'];
    [binnedNormCounts,freqData,cumFreq_CI,sumBinnedRawCounts] = ...
                                            bin_data(convsol, binInterval);
    
    isArhf = false;
    [txtFileName,pltFileName] = writeGnuData(           ...
        GeomStruct          ,   isArhf              ,   ...
        freqData            ,   cumFreq_CI          ,   ...
        minFraction         ,   sumBinnedRawCounts  ,   ...
        numXbins            ,   numYbins            ,   ...
        binInterval         ,   binnedNormCounts    ,   ...
        outDir                                          ...
        );
    
    writeGnuFile(                                       ...
        GeomStruct          ,   isArhf              ,   ...
        pltFileName         ,   txtFileName         ,   ...
        sumBinnedRawCounts  ,   freqData            ,   ...
        binInterval         ,   minFraction         ,   ...
        outDir                                          ...
        );
end
